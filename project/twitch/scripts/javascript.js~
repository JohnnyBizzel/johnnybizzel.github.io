var twitchJson = [
  {
    "stream": {
      "mature": false,
      "status": "Greg working on Electron-Vue boilerplate w/ Akira #programming #vuejs #electron",
      "broadcaster_language": "en",
      "display_name": "FreeCodeCamp",
      "game": "Creative",
      "language": "en",
      "_id": 79776140,
      "name": "freecodecamp",
      "created_at": "2015-01-14T03:36:47Z",
      "updated_at": "2016-09-17T05:00:52Z",
      "delay": null,
      "logo": "https://static-cdn.jtvnw.net/jtv_user_pictures/freecodecamp-profile_image-d9514f2df0962329-300x300.png",
      "banner": null,
      "video_banner": "https://static-cdn.jtvnw.net/jtv_user_pictures/freecodecamp-channel_offline_image-b8e133c78cd51cb0-1920x1080.png",
      "background": null,
      "profile_banner": "https://static-cdn.jtvnw.net/jtv_user_pictures/freecodecamp-profile_banner-6f5e3445ff474aec-480.png",
      "profile_banner_background_color": null,
      "partner": false,
      "url": "https://www.twitch.tv/freecodecamp",
      "views": 161989,
      "followers": 10048,
      "_links": {
        "self": "https://api.twitch.tv/kraken/channels/freecodecamp",
        "follows": "https://api.twitch.tv/kraken/channels/freecodecamp/follows",
        "commercial": "https://api.twitch.tv/kraken/channels/freecodecamp/commercial",
        "stream_key": "https://api.twitch.tv/kraken/channels/freecodecamp/stream_key",
        "chat": "https://api.twitch.tv/kraken/chat/freecodecamp",
        "subscriptions": "https://api.twitch.tv/kraken/channels/freecodecamp/subscriptions",
        "editors": "https://api.twitch.tv/kraken/channels/freecodecamp/editors",
        "teams": "https://api.twitch.tv/kraken/channels/freecodecamp/teams",
        "videos": "https://api.twitch.tv/kraken/channels/freecodecamp/videos"
      }
    },
    "_links": {
      "self": "https://api.twitch.tv/kraken/streams/freecodecamp",
      "channel": "https://api.twitch.tv/kraken/channels/freecodecamp"
    }
  },
  {
    "stream": null,
    "display_name": "OgamingSC2",
    "_links": {
      "self": "https://api.twitch.tv/kraken/streams/ogamingsc2",
      "channel": "https://api.twitch.tv/kraken/channels/ogamingsc2"
    }
  },
  {
    "stream": {
      "mature": false,
      "status": "RERUN: StarCraft 2 - Kane vs. HuK (ZvP) - WCS Season 3 Challenger AM - Match 4",
      "broadcaster_language": "en",
      "display_name": "ESL_SC2",
      "game": "StarCraft II",
      "language": "en",
      "_id": 30220059,
      "name": "esl_sc2",
      "created_at": "2012-05-02T09:59:20Z",
      "updated_at": "2016-09-17T06:02:57Z",
      "delay": null,
      "logo": "https://static-cdn.jtvnw.net/jtv_user_pictures/esl_sc2-profile_image-d6db9488cec97125-300x300.jpeg",
      "banner": null,
      "video_banner": "https://static-cdn.jtvnw.net/jtv_user_pictures/esl_sc2-channel_offline_image-5a8657f8393c9d85-1920x1080.jpeg",
      "background": null,
      "profile_banner": "https://static-cdn.jtvnw.net/jtv_user_pictures/esl_sc2-profile_banner-f8295b33d1846e75-480.jpeg",
      "profile_banner_background_color": "#050506",
      "partner": true,
      "url": "https://www.twitch.tv/esl_sc2",
      "views": 60843789,
      "followers": 135275,
      "_links": {
        "self": "https://api.twitch.tv/kraken/channels/esl_sc2",
        "follows": "https://api.twitch.tv/kraken/channels/esl_sc2/follows",
        "commercial": "https://api.twitch.tv/kraken/channels/esl_sc2/commercial",
        "stream_key": "https://api.twitch.tv/kraken/channels/esl_sc2/stream_key",
        "chat": "https://api.twitch.tv/kraken/chat/esl_sc2",
        "subscriptions": "https://api.twitch.tv/kraken/channels/esl_sc2/subscriptions",
        "editors": "https://api.twitch.tv/kraken/channels/esl_sc2/editors",
        "teams": "https://api.twitch.tv/kraken/channels/esl_sc2/teams",
        "videos": "https://api.twitch.tv/kraken/channels/esl_sc2/videos"
      }
    },
    "_links": {
      "self": "https://api.twitch.tv/kraken/streams/esl_sc2",
      "channel": "https://api.twitch.tv/kraken/channels/esl_sc2"
    }
  },
  {
    "stream": null,
    "display_name": "noobs2ninjas",
    "_links": {
      "self": "https://api.twitch.tv/kraken/streams/esl_sc2",
      "channel": "https://api.twitch.tv/kraken/channels/esl_sc2"
    }
  },
  {
    "error": "Not Found",
    "status": 404,
    "message": "Channel 'not-a-valid-account' does not exist"
  }
]

$(document).ready(function() { 
var streamList = ['FreeCodeCamp', 'sovietwomble', 'dotamajor', 'sing_sing', 'ESL_CSGO', 'ESL_SC2', 'OgamingSC2'];//,   'Hardmaninc', 'dingit.tv'];//'OgamingSC2', 'TimTheTatman',
var streamsOnline = [];
var streamsOffline = [];
var count = 0;


streamList.forEach(function(streamName) { 
	var getReq = {
	    "headers": {
	        "Accept": "application/vnd.twitchtv.v3+json",
	        "Client-ID": "6cfh06tfiwwlp6b3kt9kd3xx52wk4d"
	    },
	    "success": function (data) {
	    	count++;
	    	if (data.stream) {
	    	 var streamData = { "displayname": data.stream.channel.display_name,
	     							"streamurl":data.stream.channel.url,
	     							"streamlogo": data.stream.channel.logo,
	     							"status": data.stream.channel.status }
	     		//streamData.stream ? streamsOnline.push(streamData) : streamsOffline.push(streamName);
	     		streamsOnline.push(streamData);
	    	} else {
				 streamsOffline.push(streamName);	    	
	    	} 
	    	
	     console.log(data.stream.channel.display_name);
	     	// on LAST api call sort the streams and output them
	        if(count === streamList.length) { 
	
	          // sorting streams
	          streamsOffline = streamsOffline.sort(function(a, b) {
	            return a.toLowerCase() > b.toLowerCase();
	          });
	          streamsOnline = streamsOnline.sort(function(a, b) {
	            return a.displayname.toLowerCase() > b.displayname.toLowerCase();
	          });
	          console.log("ON:" + streamsOnline.length);
				console.log("OFF:" + streamsOffline.length);
	          // handlebars render;
	          // render content...
	          count = 0;
	        }
	    
	     
	    },
	     "error": function (){
	         console.log("could not connect!");         
	    }
	};
	// set your url value here
	getReq.url = "https://api.twitch.tv/kraken/streams/" + streamName; // '?callback=?';

	
	//Then make the ajax call - I'm using jQuery
	$.ajax(getReq).fail(function( jqXHR, textStatus ) {
  		alert( "Request failed: " + textStatus );
	});;
});
	$("#offline-streams").click(function() {
		$("#twitch-offline").show();
		$("#twitch-online").hide();
		$("#twitch-offline").html('');
		streamsOffline.forEach(function (strm) {
			$("#twitch-offline").append("<div class='box'><h3>" + strm + "</h3><img class='smaller-image' src='gameover8bit.png'><p style='color:#F22'> :( Offline ): </p></div>");
		});
	});
	$("#online-streams").click(function() {
		$("#twitch-offline").hide();
		$("#twitch-online").show();
		$("#twitch-online").html(''); // clear
		streamsOnline.forEach(function (strm) {
			$("#twitch-online").append("<div class='box'><h3>" + strm.displayname + "</h3><a href='" + strm.streamurl + "'><img class='smaller-image' src='" + strm.streamlogo + "'></a><p>" + strm.status + "</p></div>");
		});
		/*$("#stream-1").html('<h3>' + twitchJson[0].stream.display_name + '</h3>' 
							+ '<a href="' + twitchJson[0].stream.url + '"><img class="smaller-image" src="' + twitchJson[0].stream.logo + '"></a>'
							+ '<p>' + twitchJson[0].stream.status + '</p>');
		$("#stream-2").html('<h3>' + twitchJson[2].stream.display_name + '</h3>' 
							+ '<a href="' + twitchJson[2].stream.url + '"><img class="smaller-image" src="' + twitchJson[2].stream.logo + '"></a>' 
							+ '<p>' + twitchJson[2].stream.status + '</p>');
		$("#stream-3").html('<h3>' + twitchData[0].displayname + '</h3>' 
							+ '<a href="' + twitchData[0].streamurl + '"><img class="smaller-image" src="' + twitchData[0].streamlogo + '"></a>' 
							+ '<p>' + twitchData[0].status + '</p>');
		$("#stream-4").html('<h3>' + twitchData[1].displayname + '</h3>' 
							+ '<a href="' + twitchData[1].streamurl + '"><img class="smaller-image" src="' + twitchData[1].streamlogo + '"></a>' 
							+ '<p>' + twitchData[1].status + '</p>');
		$("#stream-5").html('<h3>' + twitchData[2].displayname + '</h3>' 
							+ '<a href="' + twitchData[2].streamurl + '"><img class="smaller-image" src="' + twitchData[2].streamlogo + '"></a>' 
							+ '<p>' + twitchData[2].status + '</p>');*/
	});
	$("#all-streams").click(function() {
		$("#twitch-offline").show();
		$("#twitch-online").show();
	});
});

